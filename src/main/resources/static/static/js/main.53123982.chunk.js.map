{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","identifier","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","errors","AddProject","start_date","end_date","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","match","params","getProject","updateProject","classnames","disabled","ProjectTask","p_identifier","sequence_id","deleteProjectTask","priority","summary","acceptanceCriteria","backlog_id","pt_id","Backlog","tasks","project_tasks_prop","toDoItems","inProgressItems","doneItems","i","length","console","log","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","required","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53123982.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"http://localhost:8080/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload:{}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (identifier, history) => async dispatch => {\r\ntry{\r\n  const res = await axios.get(`/api/project/${identifier}`);\r\n\r\n  dispatch({\r\n    type: GET_PROJECT,    \r\n    payload: res.data\r\n  });\r\n} catch(err) {\r\n  history.push(\"/dashboard\")\r\n}\r\n  };\r\n\r\nexport const deleteProject = (identifier) => async dispatch => {\r\n      await axios.delete(`/api/project/${identifier}`);\r\n     dispatch({\r\n       type:DELETE_PROJECT,\r\n       payload: identifier\r\n     })\r\n      };","export const GET_ERRORS = \"GET_ERRORS\";\r\n\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\n\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\n\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n\r\n\r\n//Backlog stuff\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\n\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\n\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id)\r\n    };\r\n    render() {\r\n        const {project} = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                        <h3>{project.projectName}</h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item board\">\r\n                                   Project Board\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item update\">\r\n                                     Update Project Info\r\n                                </li>\r\n                            </Link>\r\n                            \r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(\r\n                                    this,\r\n                                    project.projectIdentifier\r\n                                    )}>\r\n                                   <p> Delete Project</p>\r\n                                </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {deleteProject})(ProjectItem);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n    <React.Fragment>\r\n    <Link \r\n    to=\"/addProject\" \r\n    className=\"btn btn-lg btn-info\">\r\n    Create Project\r\n    </Link>\r\n    </React.Fragment>\r\n    );\r\n};\r\nexport default CreateProjectButton;","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\")\r\n  setJWTToken(false)\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\n\r\nclass AddProject extends Component {\r\n\r\n\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors)\r\n    {\r\n      this.setState({errors: nextProps.errors})\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n   const {errors} = this.state;\r\n\r\n\r\n    return (\r\n      <div>\r\n       \r\n         <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                  <p>{errors.projectName}</p>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg \"\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <p>{errors.projectIdentifier}</p>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <p>{errors.description}</p>\r\n                    <textarea\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors  \r\n\r\n})\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    projects:[],\r\n    project:{}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project:action.payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n\r\n}","import { GET_BACKLOG,GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\r\n    project_tasks: [],\r\n    project_task: {}\r\n\r\n}\r\n\r\n\r\nexport default function(state=initialState, action)\r\n{\r\n        switch(action.type){\r\n\r\n            case GET_BACKLOG:\r\n                return {\r\n                    ...state,\r\n                    project_tasks: action.payload\r\n                }\r\n            case GET_PROJECT_TASK:\r\n                return {\r\n                    ...state,\r\n                    project_task: action.payload\r\n                }\r\n            case DELETE_PROJECT_TASK:\r\n                return {\r\n                    ...state,\r\n                    project_tasks: state.project_tasks.filter\r\n                    (project_task => project_task.projectSequence != action.payload\r\n                        )\r\n                }\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n        errors: errorReducer,\r\n        project: projectReducer,\r\n        backlog: backlogReducer,\r\n        security : securityReducer\r\n\r\n});","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"; \r\n\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nstore = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n)\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\"\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass ProjectTask extends Component {\r\n  \r\n    onDeleteClick = (p_identifier,sequence_id,history)  =>{\r\n        this.props.deleteProjectTask(p_identifier,sequence_id)\r\n    }\r\n\r\n    render() {\r\n        const {project_task} = this.props;\r\n        return (\r\n          <div className=\"card mb-1 bg-light\">\r\n                 <div className=\"card-header text-primary\">\r\n                     ID: {project_task.projectSequence} -- Priority: {project_task.priority}\r\n                 </div>\r\n                 <div className=\"card-body bg-light\">\r\n                     <h5 className=\"card-title\">{project_task.summary}</h5> \r\n                     <p className=\"card-text text-truncate \">\r\n                         {project_task.acceptanceCriteria}\r\n                     </p>\r\n                     <Link  to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence }`} className=\"btn btn-primary\">\r\n                         View / Update\r\n                     </Link>\r\n\r\n                     <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this,\r\n                        project_task.projectIdentifier,\r\n                        project_task.projectSequence,\r\n                        this.props.history\r\n                        )}>\r\n                         Delete\r\n                     </button>\r\n                 </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  connect(null,{deleteProjectTask})(ProjectTask);","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => \r\nasync dispatch => {\r\n    try{\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task, history); \r\n   history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({ \r\n        type: GET_ERRORS,\r\n        payload: {}\r\n    });\r\n    } catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response\r\n        });\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id,pt_id,history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch(err){\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n\r\n    try{\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }catch(err){\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n       // history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTask/ProjectTask'\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const {project_tasks_prop} = this.props\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n                <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let toDoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n        for(let i=0; i < tasks.length ; i++)\r\n        {\r\n            console.log(tasks[i])\r\n            if(tasks[i].props.project_task.status === \"TO_DO\")\r\n                toDoItems.push(tasks[i])\r\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\")\r\n                inProgressItems.push(tasks[i])\r\n            if(tasks[i].props.project_task.status === \"DONE\")\r\n                doneItems.push(tasks[i])\r\n        }\r\n\r\n        return (\r\n            \r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                              <div className=\"card-header bg-secondary text-white\">\r\n                                  <h3>TO DO</h3>\r\n                              </div>\r\n                          </div>\r\n                        {toDoItems}\r\n                              </div>\r\n                      <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                              <div className=\"card-header bg-primary text-white\">\r\n                                  <h3>In Progress</h3>\r\n                              </div>\r\n                              {inProgressItems}\r\n                          </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                          <div className=\"card text-center mb-2\">\r\n                              <div className=\"card-header bg-success text-white\">\r\n                                  <h3>Done</h3>\r\n                                  \r\n                              </div>\r\n                              {doneItems}\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Backlog;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog, deleteProjectTask } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {addProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const {id} = this.props.match.params;\r\n        this.state = {\r\n            summary: '',\r\n            acceptanceCriteria:\"\",\r\n            status:\"\",\r\n            priority: 0,\r\n            dueDate:\"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n      const newTask ={  \r\n        summary: this.state.summary,\r\n        acceptanceCriteria: this.state.acceptanceCriteria,  \r\n        status:this.state.status,\r\n        priority: this.state.priority,\r\n        dueDate:this.state.dueDate\r\n    };\r\n    this.props.addProjectTask(\r\n        this.state.projectIdentifier,\r\n        newTask,\r\n        this.props.history\r\n      );\r\n}\r\n    render() {\r\n        const {id} = this.props.match.params;   \r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                            Back to Project Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Add  Project Task</h4>\r\n                        <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"summary\" \r\n                                placeholder=\"Project Task summary\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.summary} \r\n                                />\r\n                            {\r\n                                errors.summary && (\r\n                                    <div>{errors.summary}</div>\r\n                                )\r\n                            }\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\" \r\n                                placeholder=\"Acceptance Criteria\" \r\n                                name=\"acceptanceCriteria\"></textarea>\r\n                            </div>\r\n                            <h6>Due Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\"\r\n                                onChange={this.onChange} \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"dueDate\"  \r\n                                value={this.state.dueDate}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" \r\n                                onChange={this.onChange}\r\n                                name=\"priority\" \r\n                                value={this.state.priority}>\r\n                                    <option value={0}>Select Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" \r\n                                onChange={this.onChange}\r\n                                name=\"status\" \r\n                                value={this.state.status} >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAddProjectTask.propTypes ={\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount(){\r\n        if(this.props.security.validToken)\r\n        {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start your own\r\n                        </p>\r\n                        <hr />\r\n                        <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                        <p className=\"lead text-center\">Create your Account</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Name\" name=\"fullName\" value={this.state.fullName}\r\n                                    required \r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Email Address(username)\" name=\"username\" \r\n                                value={this.state.username}\r\n                                onChange={this.onChange} />\r\n    \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Password\" name=\"password\" \r\n                                value={this.state.password}\r\n                                onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\" value={this.state.confirmPassword} \r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n        errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if(nextProps.errors){\r\n      this.setState({ errors: nextProps.errors });\r\n      }\r\n    }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken)\r\n    {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken) {\n  setJWTToken(jwtToken)\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch(\n    {\n      type: SET_CURRENT_USER,\n      payload: decoded_jwtToken\n    }\n  );\n\n  const currentTime = Date.now()/1000\n  if(decoded_jwtToken.exp < currentTime){\n      store.dispatch(logout());\n      window.location.href = \"/\";\n  }\n}\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public routes\n            }\n            <Route exact path=\"/\" component = {Landing} />\n            <Route exact path=\"/register\" component = {Register} />\n            <Route exact path=\"/login\" component = {Login} />\n            {\n              //Private routes\n            }\n            <Switch>\n            \n            <SecuredRoute \n            exact path=\"/dashboard\" \n            component={Dashboard} />\n            \n            <SecuredRoute \n            exact path=\"/addProject\" \n            component={AddProject} />\n            \n            <SecuredRoute \n            exact path=\"/updateProject/:id\" \n            component={UpdateProject} />\n            \n            <SecuredRoute \n            exact path=\"/projectBoard/:id\" \n            component={ProjectBoard} />\n           \n            <SecuredRoute \n            exact path=\"/addProjectTask/:id\" \n            component={AddProjectTask} />\n\n            <SecuredRoute \n            exact path=\"/updateProjectTask/:backlog_id/:pt_id\"\n             component={UpdateProjectTask} />\n             \n            </Switch>\n\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}